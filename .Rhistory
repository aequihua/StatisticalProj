n <- 40
Xbardat <- data.frame(
x = c(apply(matrix(rexp(nosim*n,lambda),
nosim), 1, mean)
),
size = factor(rep(c(n), rep(nosim, 1))))
XbarMean = mean(Xbardat$x)
Xbarsd = sd(Xbardat$x)
print(c(muexp,XbarMean))
print(c(sdexp,Xbarsd))
nosim <- 1000
n <- 40
Xbardat <- data.frame(
x = c(apply(matrix(rexp(nosim*n,lambda),
nosim), 1, mean)
),
size = factor(rep(c(n), rep(nosim, 1))))
XbarMean = mean(Xbardat$x)
Xbarsd = sd(Xbardat$x)
print(c(muexp,XbarMean))
print(c(sdexp/sqrt(n),Xbarsd))
Xvardat <- data.frame(
x = c(apply(matrix(rexp(nosim*n,lambda),
nosim), 1, var)
),
size = factor(rep(c(n), rep(nosim, 1))))
XvarMean = mean(Xvardat$x)
Xvarsd = sd(Xvardat$x)
print(c(sdexp,XvarMean))
# Do the simulation of the variance of 1000 samples size n=40
Xvardat <- data.frame(
x = c(apply(matrix(rexp(nosim*n,lambda),
nosim), 1, var)
),
size = factor(rep(c(n), rep(nosim, 1))))
XvarMean = mean(Xvardat$x)
Xvarsd = sd(Xvardat$x)
print(c(sdexp,sqrt(XvarMean))
)
Xvardat <- data.frame(
x = c(apply(matrix(rexp(nosim*n,lambda),
nosim), 1, var)
),
size = factor(rep(c(n), rep(nosim, 1))))
XvarMean = mean(Xvardat$x)
print(c(sdexp,sqrt(XvarMean)))
# Asympthotic of the standard deviation
n <- 10000
lambda <- 0.2
sds <- vector(mode="numeric", length=0)
for (i in 1:n) {
sds[i] = sd(rexp(i,rate=lambda))
}
g <- ggplot(data.frame(x = 1 : n, y = sds), aes(x = x, y = y))
g <- g + geom_hline(yintercept = 0) + geom_line(size = 2)
g <- g + labs(x = "Number of obs", y = "Cumulative std dev")
print(g)
n <- 1000
lambda <- 0.2
means <- cumsum(rexp(n, rate=lambda)) / (1  : n)
g <- ggplot(data.frame(x = 1 : n, y = means), aes(x = x, y = y))
g <- g + geom_hline(yintercept = 0) + geom_line(size = 2)
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
print(g)
n <- 1000
lambda <- 0.2
sds <- vector(mode="numeric", length=0)
for (i in 1:n) {
sds[i] = sd(rexp(i,rate=lambda))
}
g <- ggplot(data.frame(x = 1 : n, y = sds), aes(x = x, y = y))
g <- g + geom_hline(yintercept = 0) + geom_line(size = 2)
g <- g + labs(x = "Number of obs", y = "Cumulative std dev")
print(g)
n <- 1000
lambda <- 0.2
means <- cumsum(rexp(n, rate=lambda)) / (1  : n)
g <- ggplot(data.frame(x = 1 : n, y = means), aes(x = x, y = y))
g <- g + geom_hline(yintercept = 0) + geom_line(size = 1)
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
print(g)
# Asympthotic of the standard deviation
n <- 1000
lambda <- 0.2
sds <- vector(mode="numeric", length=0)
for (i in 1:n) {
sds[i] = sd(rexp(i,rate=lambda))
}
g <- ggplot(data.frame(x = 1 : n, y = sds), aes(x = x, y = y))
g <- g + geom_hline(yintercept = 0) + geom_line(size = 1)
g <- g + labs(x = "Number of obs", y = "Cumulative std dev")
print(g)
?geom_hline
# Asympthotic of the mean
library(ggplot2)
n <- 1000
lambda <- 0.2
means <- cumsum(rexp(n, rate=lambda)) / (1  : n)
g <- ggplot(data.frame(x = 1 : n, y = means), aes(x = x, y = y))
g <- g + geom_hline(yintercept = 0) + geom_line(size = 1)
g <- g + geom_hline(yintercept=muexp,color="red",linetype="dashed", size=1.5)
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
print(g)
# Asympthotic of the standard deviation
n <- 1000
lambda <- 0.2
sds <- vector(mode="numeric", length=0)
for (i in 1:n) {
sds[i] = sd(rexp(i,rate=lambda))
}
g <- ggplot(data.frame(x = 1 : n, y = sds), aes(x = x, y = y))
g <- g + geom_hline(yintercept = 0) + geom_line(size = 1)
g <- g + geom_hline(yintercept=sdexp,color="red",linetype="dashed", size=1.5)
g <- g + labs(x = "Number of obs", y = "Cumulative std dev")
print(g)
n <- 1000
lambda <- 0.2
sds <- vector(mode="numeric", length=0)
for (i in 1:n) {
sds[i] = sd(rexp(i,rate=lambda))
}
g <- ggplot(data.frame(x = 1 : n, y = sds), aes(x = x, y = y))
g <- g + geom_hline(yintercept = 0) + geom_line(size = 1)
g <- g + geom_hline(yintercept=sdexp,color="red",linetype="dashed", size=1.5)
g <- g + labs(x = "Number of obs", y = "Cumulative std dev")
g <- g + geom_text(aes(n/2, sdexp+.5, label="Pop. sd = ")
print(g)
n <- 1000
lambda <- 0.2
sds <- vector(mode="numeric", length=0)
for (i in 1:n) {
sds[i] = sd(rexp(i,rate=lambda))
}
g <- ggplot(data.frame(x = 1 : n, y = sds), aes(x = x, y = y))
g <- g + geom_hline(yintercept = 0) + geom_line(size = 1)
g <- g + geom_hline(yintercept=sdexp,color="red",linetype="dashed", size=1.5)
g <- g + labs(x = "Number of obs", y = "Cumulative std dev")
g <- g + geom_text(aes(n/2, sdexp+.5, label="Pop. sd = "))
print(g)
# Asympthotic of the standard deviation
n <- 1000
lambda <- 0.2
sds <- vector(mode="numeric", length=0)
for (i in 1:n) {
sds[i] = sd(rexp(i,rate=lambda))
}
g <- ggplot(data.frame(x = 1 : n, y = sds), aes(x = x, y = y))
g <- g + geom_hline(yintercept = 0) + geom_line(size = 1)
g <- g + geom_hline(yintercept=sdexp,color="red",linetype="dashed", size=1.5)
g <- g + labs(x = "Number of obs", y = "Cumulative std dev")
g <- g + geom_text(aes(n/2, sdexp+.5, label="Pop. sd = ", color="red"))
print(g)
n <- 1000
lambda <- 0.2
means <- cumsum(rexp(n, rate=lambda)) / (1  : n)
g <- ggplot(data.frame(x = 1 : n, y = means), aes(x = x, y = y))
g <- g + geom_hline(yintercept = 0) + geom_line(size = 1)
g <- g + geom_hline(yintercept=muexp,color="red",linetype="dashed", size=1.5)
g <- g + labs(x = "Number of obs", y = "Cumulative mean")
g <- g + ggtitle("Asympthotic of Sample Mean to Population Mean")
print(g)
library('r/exercise01.r')
library('./r/exercise01.r')
source('r/exercise01.r')
source('r/exercise01.r')
5/sqrt(40)
library(dataset)
install.packages('dataset')
library(datasets)
data(mtcars)
head(mtcars)
attach(mtcars)
mean(mpg)
sd(mpg)
t.test(mpg)
t.test(mpg)$conf.int
qt(.975,8)
qt(.975,8)/3
c4=mtcars$mpg[mtcars$cyl ==4]
c6=mtcars$mpg[mtcars$cyl ==6]
t.test(c4,c6,var.equal=TRUE)
qt(.975,8)
1100 + c(-1,1)*30/sqrt(9)*qt(.975,8)
6 / qt(.975,8)
?t.test
t.test(c4,c6,var.equal=TRUE)
y1mean=3
y2mean=5
y1var=.6
y2var=.68
n1=10
n2=10
pooledvar=(y1var+y2var)/2
meandif = y1mean-y2mean
tstat = qt(.975,n1+n2-2)
meandif+c(-1,1)*tstat*pooledvar
meandif+c(-1,1)*tstat*sqrt(pooledvar)
meandif+c(-1,1)*tstat*sqrt(pooledvar)*(1/10+1/10)^.5
x1mean=4
x1sd=.5
x2mean=6
x2sd=2
meandif2=x1mean-x2mean
meandif2=x2mean-x1mean
poolsd2 = sqrt((x1sd^2+x2sd^2)/2)
meandif2+c(-1,1)*poolsd2*qnorm(.975)
meandif2+c(-1,1)*poolsd2*qnorm(.975)*(1/100+1/100)^.5
treatedmean=-3
placebomean=1
treatedsd=1.5
placebosd=1.8
ntreated=9
nplacebo=9
tstat = qt(.95,ntreated+nplacebo-2)
poolsd3 = sqrt((treatedsd^2+placebosd^2)/2)
meandif3=treatedmean-placebomean
meandif3+c(-1,1)*tstat*poolsd3*(1/9+1/9)^.5
data(ToothGrowth)
head(ToothGrowth)
tgdata <- ToothGrowth
tgdata <- ToothGrowth
hist(tgdata$len)
class(tgdata)
summary(tgdata)
table(tgdata)
head(tgdata)
class(tgdata$dose)
tgdata$supp
tgdata$dose
library(ggplot2)
g <- ggplot(tgdata, aes(x = tgdata$dose, y = tgdata$len, fill = tgdata$supp)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + geom_density(alpha=.2, fill="#FF6666")
g <- g + ggtitle("Growth of Tooth - Effect of different doses")
g <- g + labs(x = "Applied Dose", y = "Length of Tooth")
g + facet_grid(. ~ tgdata$supp)
print(g)
g <- ggplot(tgdata, aes(x = tgdata$dose, y = tgdata$len, fill = tgdata$supp)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black"))
g <- g + geom_density(alpha=.2, fill="#FF6666")
g <- g + ggtitle("Growth of Tooth - Effect of different doses")
g <- g + labs(x = "Applied Dose", y = "Length of Tooth")
g + facet_grid(. ~ tgdata$supp)
print(g)
qplot(dose, len, data=tgdata)
qplot(dose, len, data=tgdata, color=supp)
qplot(dose, len, data=tgdata)
qplot(dose, len, data=tgdata, color=supp)
qplot(dose, len, data=tgdata, color=supp,
main="Overall effect of supplements in Tooth Length",
xlab="Applied dose (mg)", ylab="Tooth length (mm)"
)
qplot(len, dose, data=tgdata, color=supp,
main="Overall effect of supplements in Tooth Length",
xlab="Applied dose (mg)", ylab="Tooth length (mm)")
qplot(dose, len, data=tgdata, color=supp,
main="Overall effect of supplements in Tooth Length",
xlab="Applied dose (mg)", ylab="Tooth length (mm)")
library(datasets); data(ChickWeight); library(reshape2)
##define weight gain or loss
wideCW <- dcast(ChickWeight, Diet + Chick ~ Time, value.var = "weight")
names(wideCW)[-(1 : 2)] <- paste("time", names(wideCW)[-(1 : 2)], sep = "")
library(dplyr)
wideCW <- mutate(wideCW,
gain = time21 - time0
)
install.packages('dplyr')
library(datasets); data(ChickWeight); library(reshape2)
##define weight gain or loss
wideCW <- dcast(ChickWeight, Diet + Chick ~ Time, value.var = "weight")
names(wideCW)[-(1 : 2)] <- paste("time", names(wideCW)[-(1 : 2)], sep = "")
library(dplyr)
wideCW <- mutate(wideCW,
gain = time21 - time0
)
g <- ggplot(ChickWeight, aes(x = Time, y = weight,
colour = Diet, group = Chick))
g <- g + geom_line()
g <- g + stat_summary(aes(group = 1), geom = "line", fun.y = mean, size = 1, col = "black")
g <- g + facet_grid(. ~ Diet)
g
g <- ggplot(wideCW, aes(x = factor(Diet), y = gain, fill = factor(Diet)))
g <- g + geom_violin(col = "black", size = 2)
g
wideCW14 <- subset(wideCW, Diet %in% c(1, 4))
rbind(
t.test(gain ~ Diet, paired = FALSE, var.equal = TRUE, data = wideCW14)$conf,
t.test(gain ~ Diet, paired = FALSE, var.equal = FALSE, data = wideCW14)$conf
)
g <- ggplot(tgdata, aes(x = dose, y = len, group = supp)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black"))
g <- g + geom_density(alpha=.2, fill="#FF6666")
g <- g + ggtitle("Growth of Tooth - Effect of different doses")
g <- g + labs(x = "Applied Dose", y = "Length of Tooth")
print(g)
g <- ggplot(tgdata, aes(x = dose, y = len, group = supp))
g <- g + geom_histogram(alpha = .20, binwidth=.3, colour = "black")
g <- g + geom_density(alpha=.2, fill="#FF6666")
g <- g + ggtitle("Growth of Tooth - Effect of different doses")
g <- g + labs(x = "Applied Dose", y = "Length of Tooth")
print(g)
g <- ggplot(tgdata, aes(x = dose, y = len, group = supp))
g <- g + ggtitle("Growth of Tooth - Effect of different doses")
g <- g + labs(x = "Applied Dose", y = "Length of Tooth")
print(g)
g
print(g)
g <- ggplot(tgdata, aes(x = dose, y = len, group = supp))
g <- g + ggtitle("Growth of Tooth - Effect of different doses")
g <- g + labs(x = "Applied Dose", y = "Length of Tooth")
print(g)
g <- ggplot(tgdata, aes(x = dose, y = len, group = supp))
g <- g + ggtitle("Growth of Tooth - Effect of different doses")
g <- g + labs(x = "Applied Dose", y = "Length of Tooth")
g <- g + geom_line()
print(g)
g <- ggplot(tgdata, aes(x = dose, y = len, color = supp))
g <- g + ggtitle("Growth of Tooth - Effect of different doses")
g <- g + labs(x = "Applied Dose", y = "Length of Tooth")
g <- g + geom_line()
print(g)
summary(tgdata)
g <- ggplot(tgdata, aes(x = dose, y = len, color = supp))
g <- g + ggtitle("Growth of Tooth - Effect of different doses")
g <- g + labs(x = "Applied Dose", y = "Length of Tooth")
g <- g + geom(c("point","line")
print(g)
g <- ggplot(tgdata, aes(x = dose, y = len, color = supp))
g <- g + ggtitle("Growth of Tooth - Effect of different doses")
g <- g + labs(x = "Applied Dose", y = "Length of Tooth")
g <- g + geom(c("point","line"))
print(g)
g <- ggplot(tgdata, aes(x = dose, y = len, color = supp))
g <- g + ggtitle("Growth of Tooth - Effect of different doses")
g <- g + labs(x = "Applied Dose", y = "Length of Tooth")
g <- g + geom_point() + geom_line()
print(g)
g <- ggplot(tgdata, aes(x = supp, y = len, color = dose))
g <- g + ggtitle("Growth of Tooth - Comparison of two supplements")
g <- g + labs(x = "Applied Dose", y = "Length of Tooth")
g <- g + geom_point() + geom_line()
print(g)
g <- ggplot(tgdata, aes(x = dose, y = len, color = supp))
g <- g + ggtitle("Growth of Tooth - Effect of varying doses")
g <- g + labs(x = "Applied Dose", y = "Length of Tooth")
g <- g + geom_point()
print(g)
head(tgdata)
library(dplyr)
pelos=group_by(supp, dose)
pelos=group_by(dose)
pelos=group_by(tgdata$supp, tgdata$dose)
source('~/StatisticalProj/R/Exercise02.R')
g <- ggplot(tgdata, aes(x = dose, y = len))
g <- g + ggtitle("Growth of Tooth - Effect of varying doses")
g <- g + labs(x = "Applied Dose", y = "Length of Tooth")
g <- g + geom_point()
g <- g + facet_grid(. ~ supp)
print(g)
g <- ggplot(tgdata, aes(x = dose, y = len, color=supp))
g <- g + ggtitle("Growth of Tooth - Effect of varying doses")
g <- g + labs(x = "Applied Dose", y = "Length of Tooth")
g <- g + geom_point()
g <- g + facet_grid(. ~ supp)
print(g)
g <- ggplot(tgdata, aes(x = dose, y = len, color=supp))
g <- g + ggtitle("Growth of Tooth - Effect of varying doses")
g <- g + labs(x = "Applied Dose", y = "Length of Tooth")
g <- g + geom_point() + geom_smooth()
g <- g + facet_grid(. ~ supp)
print(g)
t.test(len ~ dose, paired=FALSE, var.equal=FALSE, data=tgdata)
t.test(len ~ supp, paired=FALSE, var.equal=FALSE, data=tgdata)
split(tgdata,dose)
split(tgdata,tgdata$dose)
t.test(len ~ supp, paired=FALSE, var.equal=FALSE, data=tgdata)
t.test(len ~ supp * dose, paired=FALSE, var.equal=FALSE, data=tgdata)
t.test(len ~ supp, paired=FALSE, var.equal=FALSE, data=tgdata)
divtg = split(tgdata, dose)
divtg = split(tgdata, tgdata$dose)
divtg[1,]
divtg[1]
divtg[2]
divtg[3]
t.test(len ~ supp, paired=FALSE, var.equal=FALSE, data=divtg[1])
t.test(len ~ supp, paired=FALSE, var.equal=FALSE, data=divtg[1])
x=divtg[1]
t.test(len ~ supp, paired=FALSE, var.equal=FALSE, data=x)
class(x)
as.df(x)
as.data.frame(x)
t.test(len ~ supp, paired=FALSE, var.equal=FALSE, data=as.data.frame(x))
t.test(len ~ supp, paired=FALSE, var.equal=FALSE, data=as.data.frame(x))
x=as.data.frame(x)
t.test(len ~ supp, paired=FALSE, var.equal=FALSE, data=x)
confi <- function(x) {
df <- as.data.frame(x)
names(df) <- c("len","supp","dose")
t.test(len ~ supp, paired=FALSE, var.equal=FALSE, data=df)$conf
}
divtg = split(tgdata, tgdata$dose)
x = apply(divtg, 1, confi)
apply(divtg,1,confi)
confi(divtg[1])
confi(divtg[2])
confi(divtg[3])
confi(divtg[4])
confi(divtg[1])
length(divtg)
v = vector()
confs = vector()
for (i in 1:length(divtg))
{
confs[i] <- confi(divtg[i])
}
confs
confs = list()
for (i in 1:length(divtg))
{
confs[i] <- confi(divtg[i])
}
confs
x = confi(divtg[1])
x
class(x)
x[1]
x[2]
x[3]
x[2
]
result= data.frame(from,to)
confs
confs=list()
confs
confs[1] = confi(divtg[1])
confs
result = data.frame(from=c(0,0,0), to=c(0,0,0))
divtg = split(tgdata, tgdata$dose)
result = data.frame(from=c(0,0,0), to=c(0,0,0))
for (i in 1:length(divtg))
{
result[i]$from <- confi(divtg[i])[1]
result[i]$to <- confi(divtg[i])[2]
}
result = data.frame(from=c(0,0,0), to=c(0,0,0))
for (i in 1:length(divtg))
{
x = confi(divtg[i])
result[i]$from <- x[1]
result[i]$to <- x[2]
}
result
result = data.frame(from=c(0,0,0), to=c(0,0,0))
result
result[2]
result[1]
result[,1]
result[,2]
result[,3]
result[1,]
divtg = split(tgdata, tgdata$dose)
result = data.frame(from=c(0,0,0), to=c(0,0,0))
for (i in 1:length(divtg))
{
x = confi(divtg[i])
result[i,]$from <- x[1]
result[i,]$to <- x[2]
}
result
print(result)
t.test(len ~ supp, paired=FALSE, var.equal=FALSE, data=df)
t.test(len ~ supp, paired=FALSE, var.equal=FALSE, data=tgdata)
t.test(len ~ supp, paired=FALSE, var.equal=FALSE, data=tgdata)$mean
t.test(len ~ supp, paired=FALSE, var.equal=FALSE, data=tgdata)
m=t.test(len ~ supp, paired=FALSE, var.equal=FALSE, data=tgdata)
str(m)
m$estimate
m$estimate[1]
m$estimate[2]
class(m$estimate[1])
class(m$estimate[2])
m$estimate[1]
str(m)
confi <- function(x) {
df <- as.data.frame(x)
names(df) <- c("len","supp","dose")
t.test(len ~ supp, paired=FALSE, var.equal=FALSE, data=df)
}
divtg = split(tgdata, tgdata$dose)
result = data.frame(from=c(0,0,0), to=c(0,0,0),
meanOJ=c(0,0,0), meanVC=c(0,0,0))
for (i in 1:length(divtg))
{
x = confi(divtg[i])
result[i,]$from <- x$conf[1]
result[i,]$to <- x$conf[2]
result[i,]$meanOJ <- x$estimate[1]
result[i,]$meanVC <- x$estimate[2]
}
print(result)
library(ggplot2)
g <- ggplot(tgdata, aes(x = dose, y = len, color=supp))
g <- g + ggtitle("Growth of Tooth - Effect of varying doses")
g <- g + labs(x = "Applied Dose", y = "Length of Tooth")
g <- g + geom_point() + geom_smooth()
g <- g + facet_grid(. ~ supp)
print(g)
?geom_smooth
library(ggplot2)
g <- ggplot(tgdata, aes(x = dose, y = len, color=supp))
g <- g + ggtitle("Growth of Tooth - Effect of varying doses")
g <- g + labs(x = "Applied Dose", y = "Length of Tooth")
g <- g + geom_point() + geom_smooth(method="loess")
g <- g + facet_grid(. ~ supp)
print(g)
